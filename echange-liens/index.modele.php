<?php	class Accueil	{		var $liste_noire;		var $liste_sites;		var $nbre_sites;		var $page;		var $sites_non_bannis;				function Accueil()		{			$this->liste_noire = new ListeNoire('admin/txt/liste_noire.txt');			$this->liste_sites = new Liens('admin/txt/liens.txt');						$this->sites_non_bannis = $this->liste_sites->liensNonBannis();		}				function ajouterLien()		{			$erreur = null;						$url = $_POST['url'];			if(!preg_match('#^https?://#',$url) OR strlen($url) < 12 OR strlen($url) > 255) // une URL comporte au moins 12 caractères : http://aa.bb				$erreur = 'Merci d\'entrer une url valide !';						$titre = (get_magic_quotes_gpc() == OUI) ? stripslashes($_POST['titre']) : $_POST['titre'];			if($titre == null)				$erreur = 'Merci d\'entrer un titre !';			if(strlen($titre) > 50)				$erreur = 'Le titre ne peut dépasser 50 caractères !';						$description = (get_magic_quotes_gpc() == OUI) ? stripslashes($_POST['description']) : $_POST['description'];			if($description == null)				$erreur = 'Merci d\'entrer une description !';			if(strlen($description) > 100)				$erreur = 'La description ne peut dépasser 100 caractères !';						$filtre = array('bite','cul','pute','salope','fuck','xxx','porn','porno','gay','lesbiennes','lesbienne','chatte','suce');						if($GLOBALS['config']['liens_xxx'] == NON)			{				foreach($filtre as $mot)				{					if(preg_match('#' . $mot . '#',$description) OR preg_match('#' . $mot . '#',$titre))						$erreur = 'Les sites XXX sont interdits !';				}			}						$url_retour = $_POST['url_retour'];						if($GLOBALS['config']['lien_retour'] == PARTOUT AND strlen($url_retour) > 255)				echo 'L\'url retour est trop longue ! (255 caractères max)';						if($GLOBALS['config']['lien_retour'] == PARTOUT AND (!preg_match('#^https?://#', $url_retour) OR strlen($url_retour) < 12))				$erreur = 'Merci d\'entrer une url valide de la page contenant le lien retour !';			if($GLOBALS['config']['lien_retour'] == ACCUEIL)				$url_retour = preg_replace('#^http(s)?://([^/]+)/?.*$#','http$1://$2',$url_retour);						$mail = $_POST['mail'];			if(!preg_match('#^[a-z0-9._-]+@[a-z0-9._-]{2,}\.[a-z]{2,4}$#',$mail) AND $mail != null)				$erreur = 'Merci d\'entrer une adresse e-mail valide !';			if(strlen($mail) > 100)				$erreur = 'Le mail est trop long ! (100 caractères max)';						$this->liste_sites = new Liens('admin/txt/liens.txt');			if($this->liste_sites->estPresent($url))				$erreur = 'Vous avez déjà inscrit votre site !';						if($this->liste_noire->estPresent($url))				$erreur = 'Votre site est sur liste noire ! Contactez l\'administrateur du site pour plus d\'informations.';						if($erreur == null)			{				$chargement = file_get_contents($url_retour);				if(!$chargement)					$erreur = 'Impossible de charger l\'url contenant le lien de retour !';				if(!preg_match('#<a href="' . $GLOBALS['config']['url_du_site_principal'] . '">#i',$chargement))					$erreur = 'Le lien de retour n\'est pas présent sur la page spécifiée !';								if($erreur == null)				{					$this->liste_sites->ajouterLien($url, $titre, $description, $mail, $url_retour);					$this->liste_sites->enregistrer();										if($mail != null)					{						$headers  = 'MIME-Version: 1.0' . "\r\n";						$headers .= 'Content-type: text/html; charset=iso-8859-1' . "\r\n";						$headers .= 'From: ' . $GLOBALS['config']['mail_admin'] . "\r\n";						$headers .= 'Reply-To: ' . $GLOBALS['config']['mail_admin'] . "\r\n";						$headers .= 'X-Mailer: PHP/' . phpversion();												if(!mail($mail, 'Le site a été accepté sur ' . $GLOBALS['config']['nom_du_site'] . ' !', 'Félicitations ! Votre site a été ajouté sur ' . $GLOBALS['config']['nom_du_site'] . ' !', $headers))							$erreur = 'Le site a été soumis, mais une erreur est survenue lors de l\'envoi du mail !';					}				}			}						if($erreur == null)				return '<span class="title">Félicitations</span><hr />Félicitations ! Le site a été soumis avec succès !<br /><br />';						return '<span class="title">Erreur</span><hr />' . $erreur . '<br /><br />';		}				function derniersSites()		{			if($this->nbre_sites == 0)				return null;						$derniers_sites = array();						for($i = $this->nbre_sites - 1, $j = 0; $j < 3; $i--, $j++)			{				$lien = ($GLOBALS['config']['type_de_liens'] == REDIRECTION) ? 'goto.php?url=' . urlencode($this->sites_non_bannis[$i][URL]) : $this->sites_non_bannis[$i][URL];				$derniers_sites[] = '<a href="' . $lien . '">' . $this->sites_non_bannis[$i][TITRE] . '</a>';			}						if($this->nbre_sites == 1)				return $derniers_sites[0];						if($this->nbre_sites == 2)				return $derniers_sites[0] . ' et ' . $derniers_sites[1];						if($this->nbre_sites == 3)				return $derniers_sites[0] . ', ' . $derniers_sites[1] . ' et ' . $derniers_sites[2];						return implode(', ', $derniers_sites) . ' ...';		}				function listeSites()		{			$start = $this->page * $GLOBALS['config']['nbre_lien_par_page'] - $GLOBALS['config']['nbre_lien_par_page'];			$end = $this->page * $GLOBALS['config']['nbre_lien_par_page'];						if($end > $this->nbre_sites)				$end = $this->nbre_sites;						if($this->nbre_sites == 0)				return 'Aucun site n\'est inscrit. Soyez le premier à inscrire le votre !<br /><br />';						$return = null;						if($GLOBALS['config']['classement'] == CROISSANT)			{				for($i = $start; $i < $end; $i++)				{					$lien = ($GLOBALS['config']['type_de_liens'] == REDIRECTION) ? 'goto.php?url=' . urlencode($this->sites_non_bannis[$i][URL]) : $this->sites_non_bannis[$i][URL];					$return .= '<a href="' . $lien . '">' . $this->sites_non_bannis[$i][TITRE] . '</a> : ' . $this->sites_non_bannis[$i][DESCRIPTION] . '<br />';				}			}			else			{				$start = $this->nbre_sites - $start - 1;				// - 1 car imaginons qu'on ait 4 sites : les indices seront 0,1,2, et 3. Donc 4 ($nbre_sites) - 0 ($start) = 4 (ce n'est qu'un exemple, c'est aussi celui le plus parlant). Problème : aucun site à l'indice 4, donc on rajoute - 1				$end = $this->nbre_sites - $end - 1;				for($i = $start; $i > $end; $i--)				{					$lien = ($GLOBALS['config']['type_de_liens'] == REDIRECTION) ? 'goto.php?url=' . urlencode($this->sites_non_bannis[$i][URL]) : $this->sites_non_bannis[$i][URL];					$return .= '<a href="' . $lien . '">' . $this->sites_non_bannis[$i][TITRE] . '</a> : ' . $this->sites_non_bannis[$i][DESCRIPTION] . '<br />';				}			}						return $return . '<br />';		}				function nombreSites()		{			$this->nbre_sites = count($this->sites_non_bannis);						return $this->nbre_sites;		}				function pagination()		{			if(isset($_GET['page']))				$this->page = intval($_GET['page']);			else				$this->page = 1;			if($this->page == 0)				$this->page = 1;						$nbre_pages = ceil($this->nbre_sites / $GLOBALS['config']['nbre_lien_par_page']);						for($i = 1; $i <= $nbre_pages; $i++)				$liste_pages .= '<a href="?page=' . $i . '">' . $i . '</a> - ';			$liste_pages = preg_replace('# - $#', '' ,$liste_pages);						if($nbre_pages != 0)				return 'pages : ' . $liste_pages . '<hr />';			else				return '<hr />';		}	}?>