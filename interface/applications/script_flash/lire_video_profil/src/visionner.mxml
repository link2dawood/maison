<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="160" height="120">
	<mx:UIComponent id="contener" width="100%" height="100%"/>
	<mx:Script>
		<![CDATA[
			import mx.controls.Alert;
			
			private var nc : NetConnection;
			private var ns : NetStream;
			private var video : Video;
			public var pseudo_visionner : String;
			public var repert :String;
			
			[Bindable]
			public var canPublish : Boolean = false; //Connecté à FMS ou non ?
 
			public function initNC () : void
			{
				// Pour indiquer au serveur qui doit être le client (peut être tout objet ActionScript)
				this.nc = new NetConnection();
				this.nc.client = this;
				// Red5 ne supporte que AMF0
				this.nc.objectEncoding = ObjectEncoding.AMF0;
				// Connection au serveur Red5 sur le port RTMP 1935
				this.nc.connect("rtmp://91.121.138.88/oflaDemo/echangemaisonbiz/"+this.repert);
				// On écoute les évènements de la couche transport
				this.nc.addEventListener(NetStatusEvent.NET_STATUS, netStatusHandler);
				this.nc.addEventListener(AsyncErrorEvent.ASYNC_ERROR, asyncErrorHandler);
			}
			
			private function netStatusHandler (event : NetStatusEvent) : void
			{
				switch (event.info.code)
				{
					case "NetConnection.Connect.Success": // Connection avec le serveur réussi
					{
						this.canPublish = true; // Nous sommes connecté à FMS
						break;	
					} 
					default:
						break;
				}
			}
			
			public function voir () : void
			{
				this.ns = new NetStream (nc);
				video = new Video ();
				video.attachNetStream(this.ns);
				video.width = 200;
				video.height = 160;
				contener.addChild(video);
				try{
					this.ns.client = this;
					this.ns.play(pseudo_visionner);
					
					Alert.show("Play this video");
				}
				catch (e:Error)
				{
					trace (e.message);
				}
			}
			
			public function stopCamera () : void
			{
				this.ns.close();
				Alert.show("Stop...");
			}
 
			public function onBWDone():void
			{
				// Appelé par RED5 au moment de la connexion
			}
				
			public function onMetaData (data : Object) : void
			{
				// Appelé par RED5 au moment de la connexion
			}
		 
			public function onPlayStatus (data : Object) : void
			{
				// Appelé par RED5 au moment de la connexion
			}
			public function asyncErrorHandler(event:AsyncErrorEvent):void {
				// Appelé par RED5 au moment de la connexion
			}
		]]>
	</mx:Script>
</mx:Canvas>
